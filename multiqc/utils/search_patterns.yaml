# MultiQC search patterns.
# Default configurations for how modules can find their log files.
# Loaded by the config module so that these patterns can be overwritten in user config files.

bamtools/stats:
    contents: 'Stats for BAM file(s):'
bcftools/stats:
    contents: 'This file was produced by bcftools stats'
bismark/align:
    fn: '*_[SP]E_report.txt'
bismark/dedup:
    fn: '*.deduplication_report.txt'
bismark/meth_extract:
    fn: '*_splitting_report.txt'
bismark/m_bias:
    fn: '*M-bias.txt'
bismark/bam2nuc:
    fn: '*.nucleotide_stats.txt'
bowtie:
    contents: '# reads processed:'
bowtie2:
    contents: 'reads; of these:'
busco:
    fn: 'short_summary_*'
custom_content:
    fn:
        - '*_mqc.yaml'
        - '*_mqc.yml'
        - '*_mqc.json'
        - '*_mqc.txt'
        - '*_mqc.csv'
        - '*_mqc.tsv'
        - '*_mqc.log'
        - '*_mqc.out'
clusterflow/logs:
    fn: '*_clusterFlow.txt'
clusterflow/runfiles:
    fn: '*.run'
cutadapt:
    contents: 'This is cutadapt'
    # contents: 'cutadapt version' # Use this instead if using very old versions of cutadapt (eg. v1.2)
fastq_screen:
    fn: '*_screen.txt'
fastqc/data:
    fn: 'fastqc_data.txt'
fastqc/zip:
    fn: '*_fastqc.zip'
fastqc/theoretical_gc:
    fn: '*fastqc_theoretical_gc*'
featurecounts:
    fn: '*.summary'
gatk/varianteval:
    contents: '#:GATKReport'
goleft_indexcov/roc:
    fn: '*-indexcov.roc'
goleft_indexcov/ped:
    fn: '*-indexcov.ped'
htseq:
    contents: '__too_low_aQual'
hicup:
    fn: 'HiCUP_summary_report*'
kallisto:
    contents: '[quant] finding pseudoalignments for the reads'
methylQA:
    fn: '*.report'
peddy/summary_table:
    fn: '*.peddy.ped'
peddy/het_check:
    fn: '*.het_check.csv'
peddy/ped_check:
    fn: '*.ped_check.csv'
peddy/sex_check:
    fn: '*.sex_check.csv'
picard/alignment_metrics:
    contents: 'picard.analysis.AlignmentSummaryMetrics'
picard/basedistributionbycycle:
    contents: 'picard.analysis.BaseDistributionByCycleMetrics'
picard/gcbias:
    contents:
        - 'picard.analysis.GcBiasDetailMetrics'
        - 'picard.analysis.GcBiasSummaryMetrics'
picard/hsmetrics:
    contents: 'picard.analysis.directed.HsMetrics'
picard/insertsize:
    contents: 'picard.analysis.InsertSizeMetrics'
picard/markdups:
    contents: 'picard.sam.DuplicationMetrics'
picard/oxogmetrics:
    contents: 'picard.analysis.CollectOxoGMetrics'
picard/rnaseqmetrics:
    contents:
        - 'picard.analysis.CollectRnaSeqMetrics'
        - 'picard.analysis.Collectrnaseqmetrics'
picard/rrbs_metrics:
    contents: 'picard.analysis.RrbsSummaryMetrics'
picard/wgs_metrics:
    contents: 'picard.analysis.CollectWgsMetrics$WgsMetrics'
preseq:
    contents:
        - 'EXPECTED_DISTINCT'
        - 'distinct_reads'
prokka:
    fn: '*.txt'
qualimap/bamqc/genome_results:
    fn: 'genome_results.txt'
qualimap/bamqc/coverage:
    fn: 'coverage_histogram.txt'
qualimap/bamqc/insert_size:
    fn: 'insert_size_histogram.txt'
qualimap/bamqc/genome_fraction:
    fn: 'genome_fraction_coverage.txt'
qualimap/bamqc/gc_dist:
    fn: 'mapped_reads_gc-content_distribution.txt'
qualimap/rnaseq/rnaseq_results:
    fn: 'rnaseq_qc_results.txt'
qualimap/rnaseq/coverage:
    fn: 'coverage_profile_along_genes_(total).txt'
quast:
    fn: 'report.tsv'
rna_seqc/metrics:
    fn: 'metrics.tsv'
rna_seqc/coverage:
    fn:
        - 'meanCoverageNorm_high.txt'
        - 'meanCoverageNorm_medium.txt'
        - 'meanCoverageNorm_low.txt'
rna_seqc/correlation:
    fn:
        - 'corrMatrixPearson.txt'
        - 'corrMatrixSpearman.txt'
rseqc/bam_stat:
    contents: 'Proper-paired reads map to different chrom:'
rseqc/gene_body_coverage:
    fn: '*.geneBodyCoverage.txt'
rseqc/inner_distance:
    fn: '*.inner_distance_freq.txt'
rseqc/junction_annotation:
    contents: 'Partial Novel Splicing Junctions:'
rseqc/junction_saturation:
    fn: '*.junctionSaturation_plot.r'
rseqc/read_gc:
    fn: '*.GC.xls'
rseqc/read_distribution:
    contents: 'Group               Total_bases         Tag_count           Tags/Kb'
rseqc/read_duplication_pos:
    fn: '*.pos.DupRate.xls'
rseqc/infer_experiment:
    fn: '*infer_experiment.txt'
    contents: 'Fraction of reads explained by'
salmon/meta:
    fn: 'meta_info.json'
salmon/fld:
    fn: 'flenDist.txt'
samblaster:
    contents: 'samblaster: Version'
samtools/stats:
    contents: 'This file was produced by samtools stats'
samtools/flagstat:
    contents: 'in total (QC-passed reads + QC-failed reads)'
samtools/idxstats:
    fn: '*idxstat*'
samtools/rmdup:
    contents: '[bam_rmdup'
skewer:
    contents: 'maximum error ratio allowed (-r):'
slamdunk/summary:
    contents: '# slamdunk summary'
slamdunk/PCA:
    contents: '# slamdunk PCA'
slamdunk/rates:
    contents: '# slamdunk rates'
slamdunk/utrrates:
    contents: '# slamdunk utrrates'
slamdunk/tcperreadpos:
    contents: '# slamdunk tcperreadpos'
slamdunk/tcperutrpos:
    contents: '# slamdunk tcperutr'
snpeff:
    contents: 'SnpEff_version'
sortmerna:
    contents: 'Minimal SW score based on E-value'
star:
    fn: '*Log.final.out'
star_genecounts:
    fn: '*ReadsPerGene.out.tab'
tophat:
    fn: '*align_summary.txt'
trimmomatic:
    contents: 'Trimmomatic'